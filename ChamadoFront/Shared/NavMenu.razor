@using Blazored.LocalStorage
@inject ISyncLocalStorageService _localStorage;
@inject AuthenticationStateProvider _authentication;
@inject NavigationManager _uriManager;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Sistema de Chamados</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <AuthorizeView>
                <NotAuthorized>
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Início
                    </NavLink>
                </NotAuthorized>
                <Authorized>
                    <a class="nav-link" @onclick="Logout">
                        <span class="oi oi-home" aria-hidden="true"></span>Logout
                    </a>
                </Authorized>
            </AuthorizeView>
        </li>
    </ul>
</div>

@code {
    private bool _collapseNavMenu = true;

    private string NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    private async Task Logout()
    {
        _localStorage.RemoveItem("cpf");
        await _authentication.GetAuthenticationStateAsync();
        _uriManager.NavigateTo("/");
    }

}