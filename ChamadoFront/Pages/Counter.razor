@page "/counter"
@using Models
@inject HttpClient _client;
<AuthorizeView>
    <Authorized>
        <h1>Lista de Chamados</h1>

        <p>Veja lista de chamados</p>
        <table class="table table-sm table-hover table-bordered ">
            <thead class="thead-dark">
            <tr>
                <td>Descricao</td>
                <td>Numero do protocolo</td>
                <td>Nome do Cliente</td>
                <td>Setor do Chamado</td>
                <td>Data Abertura</td>
                <td>Status Chamado</td>
                <td>Opera√ß√µes</td>
            </tr>
            </thead>
            @if (_chamados is not null)
            {
                <Virtualize Context="chamado" Items="@_chamados">
                    <ItemContent>
                        <tr>
                            <td>@chamado.Descricao</td>
                            <td>@chamado.NumeroProtocolo</td>
                            <td>@chamado.Cliente?.Nome</td>
                            <td>@chamado.Cliente?.Setor</td>
                            <td>@chamado.DataAbertura</td>
                            <td>@chamado.StatusChamado</td>
                            <td>
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    <a href="@($"ResponderChamado/{chamado.Id}")" class="btn btn-info">Detalhes</a>
                                </div>
                            </td>
                        </tr>
                    </ItemContent>
                    <Placeholder>
                        <span>Por favor aguarde ... üòÅ</span>
                    </Placeholder>
                </Virtualize>
            }

        </table>
    </Authorized>
    <NotAuthorized>
        Voc√™ n√£o deveria estar vendo isso.
    </NotAuthorized>
</AuthorizeView>

@code
{
    List<Chamado> _chamados;

    protected override async Task OnInitializedAsync()
    {
        var apiName = "chamado/";
        _chamados = await _client.GetFromJsonAsync<List<Chamado>>(apiName);
        StateHasChanged();
    }
}