@page "/AtendenteLogin"
@using Blazored.LocalStorage
@using ChamadoFront.ViewModel
@using System.Net
@layout HomePageLayout
@inject HttpClient _httpClient
@inject AuthenticationStateProvider _stateProvider
@inject NavigationManager _uriHelper
@inject ILocalStorageService _localStorage
<head>
    <style>
    .gradient-custom {
      /* fallback for old browsers */
      background: #6a11cb;
    
      /* Chrome 10-25, Safari 5.1-6 */
      background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));
    
      /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
      background: linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1))
    }
  </style>
</head>

<section class="vh-100 gradient-custom">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card bg-dark text-white" style="border-radius: 1rem;">
                    <div class="card-body p-5 text-center">
                        <div class="mb-md-5 mt-md-4 pb-5">
                            <EditForm Model="AtendenteLoginViewModel" OnValidSubmit="Logar" >
                                <h2 class="fw-bold mb-2 text-uppercase">Login</h2>
                                <p class="text-white-50 mb-5">Entre com seu CPF e Email</p>

                                <div class="form-outline form-white mb-4">
                                    <InputText type="text" @bind-Value="AtendenteLoginViewModel.Cpf" id="typeEmailX" class="form-control form-control-lg"/>
                                    <label class="form-label" for="typeEmailX">Cpf</label>
                                </div>

                                <div class="form-outline form-white mb-4">
                                    <InputText type="text" @bind-Value="AtendenteLoginViewModel.Email"  id="typePasswordX" class="form-control form-control-lg"/>
                                    <label class="form-label" for="typePasswordX">Email</label>
                                </div>

                                <button class="btn btn-outline-light btn-lg px-5" type="submit">Login</button>

                            </EditForm>
                            <div class="d-flex justify-content-center text-center mt-4 pt-1">
                                <a href="#!" class="text-white">
                                    <i class="fab fa-facebook-f fa-lg"></i>
                                </a>
                                <a href="#!" class="text-white">
                                    <i class="fab fa-twitter fa-lg mx-4 px-2"></i>
                                </a>
                                <a href="#!" class="text-white">
                                    <i class="fab fa-google fa-lg"></i>
                                </a>
                            </div>

                        </div>

                        <div>
                            <p class="mb-0"></p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    AtendenteLoginViewModel AtendenteLoginViewModel { get; set; } = new AtendenteLoginViewModel();
    private string _api = "atendente/";
    public async Task Logar()
    {
        var response = await _httpClient.PostAsJsonAsync(_api + AtendenteLoginViewModel.Cpf, AtendenteLoginViewModel.Email);
        if (response.StatusCode == HttpStatusCode.OK)
        {
            await _localStorage.SetItemAsStringAsync("cpf",AtendenteLoginViewModel.Cpf);
            Console.WriteLine(await _localStorage.GetItemAsStringAsync("cpf"));
            await _stateProvider.GetAuthenticationStateAsync();
            _uriHelper.NavigateTo("/counter");
        }
    }
    
}